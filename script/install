#!/bin/bash

##########################################################################################
#
# Site.js version 202005010942/12.11.0 Installer for Linux (x86 and ARM) and macOS.
#
# To use:
#
# wget -qO- https://sitejs.org/install | bash
#
# Copyright (c) 2019-2020 Aral Balkan.
# Released under the AGPL version 3.0 or later license.
# Made with ‚ô• by Small Technology Foundation (https://small-tech.org)
# Like this? Fund us! (https://small-tech.org/fund-us)
#
##########################################################################################

set -e
echo
echo " üì° Downloading Site.js version 202005010942/12.11.0‚Ä¶"

function cleanUp {
  popd > /dev/null
  rm -rf /tmp/sitejs.org
}

releaseType=$1
releaseTypePath='/'

if [[ "$releaseType" == "alpha" ]]; then
  # Writes ALPHA in large red block letters.
  echo -e '\033[31m'
  echo '     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ÄÅ     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ñà‚ñà‚ñà'
  echo '    ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ     ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ'
  echo '    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ'
  echo '    ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ     ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ'
  echo '    ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ     ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà'
  echo -e '\033[0m'
  releaseTypePath='/alpha/'
elif [[ "$releaseType" == "beta" ]]; then
  # Writes BETA in large yellow block letters.
  echo -e '\033[33m'
  echo '    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ ‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ'
  echo '    ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ'
  echo '    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ     ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ'
  echo '    ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ÄÅ     ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ‚ÄÅ‚ÄÅ‚ñà‚ñà‚ÄÅ'
  echo '    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ‚ÄÅ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ   ‚ñà‚ñà‚ÄÅ  ‚ñà‚ñà'
  echo -e '\033[0m'
  releaseTypePath='/beta/'
else
  # Ignore any other type and default to the release version.
  releaseType=''
fi

# Setup
rm -rf /tmp/sitejs.org
mkdir -p /tmp/sitejs.org
pushd /tmp/sitejs.org > /dev/null

if [[ "$OSTYPE" == "linux-gnu" || "$OSTYPE" == "linux-gnueabihf" ]]; then
  cpuArchitecture=`uname -m`
  if [[ "$cpuArchitecture" == "x86_64" ]]; then
    # Linux on x64.
    wget -q "https://sitejs.org/releases${releaseTypePath}linux/202005010942.tar.gz"
  elif [[ "$cpuArchitecture" == "armv7l" || "$cpuArchitecture" == "armv6l" ]]; then
    # Linux on ARM. Tested on Raspberry Pi Zero W (armv6l), 3B+ and 4B (both reporting armv7l).
    wget -q "https://sitejs.org/releases${releaseTypePath}linux-arm/202005010942.tar.gz"
  else
    # Unsupported
    echo
    echo " ‚ùå Error: this architecture is not supported on Linux (only x86_64, armv6l, and armv7l are)."
    echo
    cleanUp
    exit 1
  fi
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # macOS
  curl -Os "https://sitejs.org/releases${releaseTypePath}macos/202005010942.tar.gz"
else
  # Unsupported
  echo
  echo " ‚ùå Error: this operating system is not supported."
  echo
  cleanUp
  exit 1
fi

echo " üì¶ Installing‚Ä¶"
gzip -d 202005010942.tar.gz
tar -xf 202005010942.tar

# Ensure that the /usr/local/bin directory exists (it does not by default on macOS)
sudo mkdir -p /usr/local/bin/

# Move the site binary there.
sudo mv site /usr/local/bin/

cleanUp

echo " üéâ Done!"
echo
